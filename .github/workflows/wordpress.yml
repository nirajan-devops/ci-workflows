name: WordPress CI

on:
  workflow_call:
    inputs:
      php-version:
        description: 'PHP version to test against'
        type: string
        default: '8.2'
      wordpress-version:
        description: 'WordPress version to test against'
        type: string
        default: 'latest'
      test-command:
        description: 'Custom test command to run'
        type: string
        default: 'composer test'

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: wordpress:latest
      options: --user=www-data

    services:
      db:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: wordpress_test
          MYSQL_USER: wordpress
          MYSQL_PASSWORD: wordpress
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ inputs.php-version }}
          extensions: mbstring, dom, mysqli, intl, xml, curl
          coverage: none
          ini-values: memory_limit=512M

      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-progress --no-suggest --optimize-autoloader

      - name: Set up WordPress test environment
        run: |
          # Install WordPress test library
          mkdir -p /tmp/wordpress-tests-lib
          svn co --quiet https://develop.svn.wordpress.org/trunk/tests/phpunit/includes/ /tmp/wordpress-tests-lib/includes
          svn co --quiet https://develop.svn.wordpress.org/trunk/tests/phpunit/data/ /tmp/wordpress-tests-lib/data

          # Create wp-config.php
          cat << 'EOF' > wp-config.php
          <?php
          define('DB_NAME', 'wordpress_test');
          define('DB_USER', 'wordpress');
          define('DB_PASSWORD', 'wordpress');
          define('DB_HOST', 'db');
          define('DB_CHARSET', 'utf8');
          define('DB_COLLATE', '');
          
          define('AUTH_KEY',         'put your unique phrase here');
          define('SECURE_AUTH_KEY',  'put your unique phrase here');
          define('LOGGED_IN_KEY',    'put your unique phrase here');
          define('NONCE_KEY',        'put your unique phrase here');
          define('AUTH_SALT',        'put your unique phrase here');
          define('SECURE_AUTH_SALT', 'put your unique phrase here');
          define('LOGGED_IN_SALT',   'put your unique phrase here');
          define('NONCE_SALT',       'put your unique phrase here');
          
          define('WP_TESTS_DOMAIN', 'example.org');
          define('WP_TESTS_EMAIL', 'admin@example.org');
          define('WP_TESTS_TITLE', 'Test Blog');
          define('WP_PHP_BINARY', 'php');
          
          $table_prefix = 'wp_';
          define('WP_DEBUG', true);
          define('WP_ENVIRONMENT_TYPE', 'ci');
          
          if (!defined('ABSPATH')) {
            define('ABSPATH', __DIR__ . '/');
          }
          
          require_once ABSPATH . 'wp-settings.php';
          EOF

          # Install WordPress core
          wp core install --url=example.org --title="Test Site" --admin_user=admin --admin_password=password --admin_email=admin@example.org --skip-email

      - name: Run tests
        run: ${{ inputs.test-command }}
        env:
          WP_TESTS_DIR: /tmp/wordpress-tests-lib
          WP_ROOT_DIR: /var/www/html

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-results.xml
name: WordPress CI

on:
  workflow_call:
    inputs:
      php-version:
        description: 'PHP version to test against'
        type: string
        default: '8.2'
      wordpress-version:
        description: 'WordPress version to test against'
        type: string
        default: 'latest'
      test-command:
        description: 'Custom test command to run'
        type: string
        default: 'composer test:ci'

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: wordpress_test
          MYSQL_USER: wordpress
          MYSQL_PASSWORD: wordpress
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y subversion mysql-client wget

      - name: Install WP-CLI
        run: |
          wget https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
          chmod +x wp-cli.phar
          sudo mv wp-cli.phar /usr/local/bin/wp
          wp --info

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ inputs.php-version }}
          extensions: mbstring, dom, mysqli, intl, xml, curl
          coverage: none
          ini-values: memory_limit=512M

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: composer-${{ hashFiles('composer.lock') }}
          restore-keys: composer-

      - name: Install Composer dependencies
        run: |
          composer install --prefer-dist --no-progress --no-suggest --optimize-autoloader

      - name: Make phpunit executable (optional)
        run: chmod +x vendor/bin/phpunit

      - name: Download WordPress test library
        run: |
          # Download all necessary files including class-basic-object.php and others
          svn export --quiet https://develop.svn.wordpress.org/trunk/tests/phpunit/includes/ /tmp/wordpress-tests-lib/includes

          # Optionally download wp-tests-config.php if needed
          svn export --quiet https://develop.svn.wordpress.org/trunk/wp-tests-config-sample.php /tmp/wordpress-tests-lib/wp-tests-config.php

          # Replace DB credentials (modify if you're using a different DB setup)
          sed -i "s/youremptytestdbnamehere/wordpress_test/" /tmp/wordpress-tests-lib/wp-tests-config.php
          sed -i "s/yourusernamehere/wordpress/" /tmp/wordpress-tests-lib/wp-tests-config.php
          sed -i "s/yourpasswordhere/wordpress/" /tmp/wordpress-tests-lib/wp-tests-config.php
          sed -i "s/localhost/127.0.0.1/" /tmp/wordpress-tests-lib/wp-tests-config.php
          

          # Create wp-tests-config.php
          cat <<EOF > /tmp/wordpress-tests-lib/wp-tests-config.php
          <?php
          define('DB_NAME', 'wordpress_test');
          define('DB_USER', 'wordpress');
          define('DB_PASSWORD', 'wordpress');
          define('DB_HOST', '127.0.0.1');
          define('DB_CHARSET', 'utf8');
          define('DB_COLLATE', '');
          define('WP_TESTS_DOMAIN', 'example.org');
          define('WP_TESTS_EMAIL', 'admin@example.org');
          define('WP_TESTS_TITLE', 'Test Blog');
          define('WP_PHP_BINARY', 'php');
          define('WPLANG', '');
          \$table_prefix = 'wptests_';
          define('WP_DEBUG', true);
          define('WP_ENVIRONMENT_TYPE', 'ci');
          EOF

      - name: Prepare WordPress core
        run: |
          mkdir -p /tmp/wordpress
          wp core download --path=/tmp/wordpress --version=${{ inputs.wordpress-version }} --force
          cp -r wp-content /tmp/wordpress/wp-content

      - name: Run tests
        run: |
          export WP_TESTS_DIR=/tmp/wordpress-tests-lib
          export WP_ROOT_DIR=/tmp/wordpress
          ${{ inputs.test-command }}
        env:
          WP_TESTS_DIR: /tmp/wordpress-tests-lib
          WP_ROOT_DIR: /tmp/wordpress

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ${{ github.workspace }}/test-results.xml
          retention-days: 5
